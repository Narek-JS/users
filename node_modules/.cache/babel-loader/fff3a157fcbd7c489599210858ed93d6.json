{"ast":null,"code":"import { images } from \"../consts\";\n\nconst filteredData = (data, value, type) => {\n  switch (type) {\n    case 'users':\n      return data.filter(user => user.name.includes(value) || user.username.includes(value));\n\n    case 'posts':\n      return data.filter(post => post.title.includes(value) || post.body.includes(value));\n  }\n\n  ;\n};\n\nfunction replaceText(text, oldText, newText) {\n  let value = text;\n\n  for (let i = 0; i < text.split(oldText).length - 1; i++) {\n    value = value.replace(oldText, newText);\n  }\n\n  ;\n  return value;\n}\n\n;\n\nconst addUsersImg = (users, index = null) => {\n  if (index === null) {\n    return users.map((user, index) => {\n      return { ...user,\n        img: images[index]\n      };\n    });\n  } else {\n    return { ...users,\n      img: images[index]\n    };\n  }\n\n  ;\n};\n\nexport { filteredData, replaceText, addUsersImg };","map":{"version":3,"sources":["/home/narek/Desktop/users/src/utils/index.js"],"names":["images","filteredData","data","value","type","filter","user","name","includes","username","post","title","body","replaceText","text","oldText","newText","i","split","length","replace","addUsersImg","users","index","map","img"],"mappings":"AAAA,SAASA,MAAT,QAAuB,WAAvB;;AAEA,MAAMC,YAAY,GAAG,CAACC,IAAD,EAAOC,KAAP,EAAcC,IAAd,KAAuB;AACxC,UAAOA,IAAP;AACI,SAAK,OAAL;AACI,aAAOF,IAAI,CACNG,MADE,CACKC,IAAI,IAAIA,IAAI,CAACC,IAAL,CAAUC,QAAV,CAAmBL,KAAnB,KACZG,IAAI,CAACG,QAAL,CAAcD,QAAd,CAAuBL,KAAvB,CAFD,CAAP;;AAGJ,SAAK,OAAL;AACI,aAAOD,IAAI,CACNG,MADE,CACKK,IAAI,IAAIA,IAAI,CAACC,KAAL,CAAWH,QAAX,CAAoBL,KAApB,KACZO,IAAI,CAACE,IAAL,CAAUJ,QAAV,CAAmBL,KAAnB,CAFD,CAAP;AANR;;AASC;AACJ,CAXD;;AAaA,SAASU,WAAT,CAAqBC,IAArB,EAA2BC,OAA3B,EAAoCC,OAApC,EAA4C;AACxC,MAAIb,KAAK,GAAGW,IAAZ;;AACA,OAAI,IAAIG,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGH,IAAI,CAACI,KAAL,CAAWH,OAAX,EAAoBI,MAApB,GAA6B,CAAhD,EAAmDF,CAAC,EAApD,EAAuD;AACnDd,IAAAA,KAAK,GAAGA,KAAK,CAACiB,OAAN,CAAcL,OAAd,EAAuBC,OAAvB,CAAR;AACH;;AAAA;AACD,SAAOb,KAAP;AACH;;AAAA;;AAED,MAAMkB,WAAW,GAAG,CAACC,KAAD,EAAQC,KAAK,GAAC,IAAd,KAAuB;AACvC,MAAGA,KAAK,KAAG,IAAX,EAAgB;AACZ,WAAOD,KAAK,CAACE,GAAN,CAAU,CAAClB,IAAD,EAAOiB,KAAP,KAAiB;AAC9B,aAAO,EACH,GAAGjB,IADA;AAEHmB,QAAAA,GAAG,EAAEzB,MAAM,CAACuB,KAAD;AAFR,OAAP;AAIH,KALM,CAAP;AAMH,GAPD,MAOK;AACD,WAAO,EACH,GAAGD,KADA;AAEHG,MAAAA,GAAG,EAACzB,MAAM,CAACuB,KAAD;AAFP,KAAP;AAIH;;AAAA;AACJ,CAdD;;AAiBA,SAAStB,YAAT,EAAuBY,WAAvB,EAAoCQ,WAApC","sourcesContent":["import { images } from \"../consts\";\n\nconst filteredData = (data, value, type) => {\n    switch(type){\n        case 'users':\n            return data\n                .filter(user => user.name.includes(value) ||\n                    user.username.includes(value));\n        case 'posts':\n            return data\n                .filter(post => post.title.includes(value) ||\n                    post.body.includes(value));\n    };  \n};\n\nfunction replaceText(text, oldText, newText){\n    let value = text;\n    for(let i = 0; i < text.split(oldText).length - 1; i++){\n        value = value.replace(oldText, newText);\n    };\n    return value;\n};\n\nconst addUsersImg = (users, index=null) => {\n    if(index===null){\n        return users.map((user, index) => {\n            return {\n                ...user,\n                img: images[index]\n            };\n        });\n    }else{\n        return {\n            ...users,\n            img:images[index]\n        };\n    };\n};\n\n\nexport { filteredData, replaceText, addUsersImg };"]},"metadata":{},"sourceType":"module"}