{"ast":null,"code":"import axios from \"axios\";\nconst URL = 'https://jsonplaceholder.typicode.com';\nconst api = axios.create({\n  baseURL: URL\n});\n\nconst getUsers = path => api.get(path);\n\nconst getUser = path => api.get(path);\n\nconst getPosts = path => api.get(path);\n\nexport { getUsers, getUser, getPosts }; // const getUsers = async (users, setUsers) => {\n//     setUsers({...users, loading: true});\n//     const api = axios.create({\n//         method: 'users',\n//         baseURL: URL,\n//         data: {...users}\n//     });\n//     const response = await api.get('/users');\n//     setUsers({data: response.data, loading:false});\n// };\n// async function getUser(id, user, setUser){\n//     setUser({...user, loading: true});\n//     const api = axios.create({\n//         method: 'post',\n//         baseURL: URL,\n//         data: {...user}\n//     });\n//     const response = await api.get(`/users/${id}`);\n//     setUser({data: response.data, loading: false});\n// };\n// async function getPosts(id, posts, setPosts){\n//     setPosts({...posts, loading: true});\n//     const api = axios.create({\n//         method: 'posts',\n//         baseURL: URL,\n//         data: {...posts}\n//     });\n//     const response = await api.get('/posts');\n//     const filteredPosts = response.data.filter(post => post.userId === +id);\n//     setPosts({data: filteredPosts, loading: false});\n// };","map":{"version":3,"sources":["/home/narek/Desktop/clonedUsersFromGithub/src/services/http.js"],"names":["axios","URL","api","create","baseURL","getUsers","path","get","getUser","getPosts"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,MAAMC,GAAG,GAAG,sCAAZ;AAEA,MAAMC,GAAG,GAAGF,KAAK,CAACG,MAAN,CAAa;AACrBC,EAAAA,OAAO,EAAEH;AADY,CAAb,CAAZ;;AAIA,MAAMI,QAAQ,GAAIC,IAAD,IAAUJ,GAAG,CAACK,GAAJ,CAAQD,IAAR,CAA3B;;AACA,MAAME,OAAO,GAAIF,IAAD,IAAUJ,GAAG,CAACK,GAAJ,CAAQD,IAAR,CAA1B;;AACA,MAAMG,QAAQ,GAAIH,IAAD,IAAUJ,GAAG,CAACK,GAAJ,CAAQD,IAAR,CAA3B;;AAEA,SAASD,QAAT,EAAmBG,OAAnB,EAA4BC,QAA5B,G,CASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import axios from \"axios\";\nconst URL = 'https://jsonplaceholder.typicode.com';\n\nconst api = axios.create({\n    baseURL: URL\n});\n\nconst getUsers = (path) => api.get(path);\nconst getUser = (path) => api.get(path);\nconst getPosts = (path) => api.get(path);\n\nexport { getUsers, getUser, getPosts };\n\n\n\n\n\n\n\n\n// const getUsers = async (users, setUsers) => {\n//     setUsers({...users, loading: true});\n//     const api = axios.create({\n//         method: 'users',\n//         baseURL: URL,\n//         data: {...users}\n//     });\n//     const response = await api.get('/users');\n//     setUsers({data: response.data, loading:false});\n// };\n\n// async function getUser(id, user, setUser){\n//     setUser({...user, loading: true});\n//     const api = axios.create({\n//         method: 'post',\n//         baseURL: URL,\n//         data: {...user}\n//     });\n//     const response = await api.get(`/users/${id}`);\n//     setUser({data: response.data, loading: false});\n// };\n\n// async function getPosts(id, posts, setPosts){\n//     setPosts({...posts, loading: true});\n//     const api = axios.create({\n//         method: 'posts',\n//         baseURL: URL,\n//         data: {...posts}\n//     });\n//     const response = await api.get('/posts');\n//     const filteredPosts = response.data.filter(post => post.userId === +id);\n//     setPosts({data: filteredPosts, loading: false});\n// };\n\n\n\n\n\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}